parameters:
- name: dbserver
  type: string

steps:
- task: Kubernetes@1
  displayName: 'kubectl configmap and secret'
  inputs:
    connectionType: Kubernetes Service Connection
    kubernetesServiceEndpoint: aks-hashidemo-default
    namespace: default
    cwd: $(Pipeline.Workspace)/drop/deploy/kubernetes
    forceUpdateConfigMap: true
    configMapName: app-config
    configMapArguments: --from-literal=GREETING=HelloFromConfigMap
    secretType: generic
    secretName: db-secret
    secretArguments: --from-literal=DB_SERVER=tcp:${{parameters.dbserver}} --from-literal=DB_USER=$(DbUser) --from-literal=DB_PASSWORD=$(DbPassword)
- task: Kubernetes@1
  displayName: 'kubectl apply - deployment'
  inputs:
    connectionType: Kubernetes Service Connection
    kubernetesServiceEndpoint: aks-hashidemo-default
    namespace: default
    cwd: $(Pipeline.Workspace)/drop/deploy/kubernetes
    command: apply
    arguments: -f todoapp-deployment.yml

- task: Kubernetes@1
  displayName: kubectl apply - service
  inputs:
    connectionType: Kubernetes Service Connection
    kubernetesServiceEndpoint: aks-hashidemo-default    
    namespace: default
    cwd: $(Pipeline.Workspace)/drop/deploy/kubernetes
    command: apply
    arguments: -f todoapp-svc.yml
