steps:
  - task: UseDotNet@2
    displayName: 'Use .NET Core sdk $(dotnetSdkVersion)'
    inputs:
      version: '$(dotnetSdkVersion)'

  - task: DotNetCoreCLI@2
    displayName: 'Restore'
    inputs:
      command: 'restore'
      projects: '**/*.csproj'

  - task: DotNetCoreCLI@2
    displayName: 'Build'
    inputs:
      command: 'build'
      projects: '**/*.csproj'
      arguments: '--configuration $(BuildConfiguration) --no-restore'
  
  - task: DotNetCoreCLI@2
    displayName: 'Publish & Zip'
    inputs:
      command: 'publish'
      publishWebProjects: false
      projects: |
        src/TodoApp/*.csproj
      arguments: '--no-build --configuration $(BuildConfiguration) --output $(Build.ArtifactStagingDirectory)'
      zipAfterPublish: true

  - task: DotNetCoreCLI@2
    displayName: 'Install dotnet-ef'
    inputs:
      command: 'custom'
      custom: 'tool'
      arguments: 'install --global dotnet-ef --version 3.1.9'
  
  - task: DotNetCoreCLI@2
    displayName: 'Generate DB Migration script'
    inputs:
      command: 'custom'
      custom: 'ef'
      arguments: 'migrations script --configuration $(BuildConfiguration) --no-build --no-color --verbose  --output $(Build.ArtifactStagingDirectory)/dbmigration.sql --context TodoAppContext  --idempotent'
      workingDirectory: $(Build.SourcesDirectory)/src/TodoApp
 
  - script: cp -r $(Build.SourcesDirectory)/deploy $(Build.ArtifactStagingDirectory)
    displayName: Copy Deployment Files

  - task: PublishBuildArtifacts@1
    displayName: 'Publish Release Artifacts'
    inputs:
      PathtoPublish: '$(Build.ArtifactStagingDirectory)'
      ArtifactName: 'drop'
      publishLocation: 'Container'